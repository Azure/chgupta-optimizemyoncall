{
  "bv": 10,
  "component": "KustoLogs",
  "computedMetrics": null,
  "deleted": false,
  "description": null,
  "dimensions": null,
  "displayName": null,
  "enableClientEtwPublication": true,
  "enableClientSideForking": true,
  "enableClientSideLastSamplingMode": false,
  "enableClientSidePublication": true,
  "id": "HydrationErrorCount",
  "isFromNewPipeline": false,
  "isQosMetric": false,
  "metrics": null,
  "monitors": [
    {
      "category": "",
      "conditions": [
        [
          "ProviderName",
          "*",
          ""
        ],
        [
          "StorageAccountName",
          "*",
          ""
        ]
      ],
      "customLinks": [
        {
          "$type": "Microsoft.Online.Metrics.Common.EventConfiguration.KustoJarvisLink, Microsoft.Online.Metrics.Common",
          "autoExecute": true,
          "compressQuery": true,
          "database": "ARMProd",
          "endpoint": "https://armprod.kusto.windows.net",
          "executionDelay": "00:01:00",
          "maxResultRowCount": 15,
          "preIncidentQueryTimeout": "00:00:50",
          "query": "Errors\n| where TIMESTAMP >= ago(2h) \n| where operationName startswith \"ResourceHydrationEngine.GetResourceHydrationStorageAccount\"\n| where message contains \"Failed to get key of storage account\"\n| extend StorageAccountName = extract(\"Failed to get key of storage account \\'(.*)\\' in subscription\", 1, message), ProviderName=extract(\"of provider \\'(.*)\\' from RDFE\", 1, message)\n| where ProviderName startswith \"Microsoft.Classic\" // to filter out the classic resource providers ARM owns\n| summarize HydrationErrorCount=count() by ProviderName, StorageAccountName, bin(TIMESTAMP, 1m) \n| project TIMESTAMP, d_ProviderName = ProviderName, d_StorageAccountName = StorageAccountName, m_HydrationErrorCount = HydrationErrorCount \n",
          "title": "HydrationStorageAccountFailures",
          "type": "Kusto"
        }
      ],
      "customMessage": "This is to monitor the health of two hydration storage accounts, classichydrationprodch01 and classichydrationprodsn01, which are used to sync resources created in RDFE with ARM. If you received this alert, that means customers who created classic resource through RDFE would not be able to view it through Portal or access it through ARM. Please run the following query and  find out why get key failed for these two storage accounts and mitigate accordingly.   Errors| where TIMESTAMP >= {startTime} and TIMESTAMP <= {endTime}  | where operationName startswith \"ResourceHydrationEngine.GetResourceHydrationStorageAccount\" | where message contains \"Failed to get key of storage account\" | extend StorageAccountName = extract(\"Failed to get key of storage account \\'(.*)\\' in subscription\", 1, message), ProviderName=extract(\"of provider \\'(.*)\\' from RDFE\", 1, message) | where ProviderName startswith \"Microsoft.Classic\" // to filter out the classic resource providers ARM owns | summarize HydrationErrorCount=count() by ProviderName, StorageAccountName, bin(TIMESTAMP, 1m)  | project TIMESTAMP, d_ProviderName = ProviderName, d_StorageAccountName = StorageAccountName, m_HydrationErrorCount = HydrationErrorCount ",
      "customTitle": "Hydration storage account  [{Monitor.Dimension.StorageAccountName}] is not able to sync resource for [{Monitor.Dimension.ProviderName}] ",
      "dashboardName": "",
      "dashboardNamespace": "",
      "description": "This is to monitor the health of two hydration storage accounts, classichydrationprodch01 and classichydrationprodsn01, which are used to sync resources created in RDFE with ARM. If you received this alert, that means customers who created classic resource through RDFE would not be able to view it through Portal or access it through ARM.",
      "desiredConditions": null,
      "eventIdentifier": {
        "component": "KustoLogs",
        "id": "HydrationErrorCount",
        "tenant": "ARM"
      },
      "explicitPreAgg": null,
      "frequency": "00:10:00",
      "healthyCountToMitigateIncident": 3,
      "healthyDurationToMitigateIncident": "00:20:00",
      "hintsLookbackDuration": "1.00:00:00",
      "id": "HydrationStorageAccountsHealthMonitor",
      "ingestionDelay": "00:00:00",
      "inputResourceType": "",
      "isDisabled": false,
      "isRegularMonitor": true,
      "isSilent": false,
      "isThrottled": false,
      "lastUpdatedBy": "danwa",
      "lastUpdateTime": "2019-11-07T19:23:24.9513983Z",
      "lookbackDuration": "01:00:00",
      "metadata": [],
      "metricsViewName": "",
      "monitorActorConfiguration": {
        "additionalDataForMonitorsEnabled": false,
        "azureCacheTimeToExclude": "00:00:00",
        "baselineConcurrentGetAnomalyCallsV2": 0,
        "baselineFastServiceUri": null,
        "baselineFastServiceUriForAzure": null,
        "baselineIsAnomalyBatchProcessingSize": 0,
        "baselineServiceUri": null,
        "baselineServiceUriForAzure": null,
        "baselineServiceUseQueryService": false,
        "baselineUiFacingServiceUri": null,
        "baselineUiFacingServiceUriForAzure": null,
        "baseReportExpirationTimeInSeconds": 0,
        "batchReportingMonitor": false,
        "cacheTimeToExclude": "00:00:00",
        "cadMaxCombinationsEvaluationThreshold": 0,
        "certificateIdentifier": null,
        "certificateThumbprint": null,
        "combinationDeltaFetchLookback": "00:00:00",
        "combinationRefreshMinInterval": "00:00:00",
        "combinationsChunkSizePerConcurrentEvaluateBlock": 0,
        "consecutiveMonitorTimeoutsForAlerting": 0,
        "customizeSeverityForMonitorExecutionFailure": false,
        "debug": false,
        "disabled": false,
        "disableMetricDataInAlerts": false,
        "dqConcurrencyConfiguration": null,
        "dynamicThresholdMaxCombinationsEvaluationThreshold": 0,
        "enableCombinationsThrottlingForCad": false,
        "enableCostReporting": false,
        "enableDictionaryBasedMetricsSourceMatching": false,
        "enableGroupingByCommonDimensions": false,
        "enableHealthMonitors": false,
        "enableMonitorTimeoutAlerts": false,
        "enableQueryServiceQosMetricSupport": false,
        "enableSelectPreaggregate": false,
        "enableSubmitMetricsFromJs": false,
        "evaluatorTimeout": "00:00:00",
        "fetchDeltaHints": false,
        "hasUserConfigCacheTimeToExclude": null,
        "hintLookbackDuration": "00:00:00",
        "includeTimeSeriesInformationInWatchdogMetadata": false,
        "isThirdPartyStamp": false,
        "kenshoServiceUri": null,
        "logCombinationsInfo": false,
        "maxBufferSizeForRetrievedData": 0,
        "maxCombinationsCountPerPartition": 0,
        "maxCombinationsEvaluationThreshold": 0,
        "maxCombinationsForDataSources": 0,
        "maxCombinationsForMetricSources": 0,
        "maxConcurrentRetrieveOperations": 0,
        "maxDegreeOfParallelismForEvaluateBlock": 0,
        "maxFetchMetricsInJs": 0,
        "minCombinationsCountToRequirePartition": 0,
        "notQueryMetricsSourceCombinationIfNoWildcard": false,
        "overrideHealthDataValidation": false,
        "overrideMetricDataValidation": false,
        "partnerClientCertificateIdentifier": null,
        "preferMetricsStore": false,
        "preventCombinationsOverwriteByDeltaRefresh": false,
        "previewWithHistoricData": false,
        "removeExtraIngestionDelayInExecution": false,
        "removeExtraQueryComparison": false,
        "resourceTypeOverride": null,
        "treatInheritNotAsWildcard": false,
        "useAccountMigrationSupport": false,
        "useDefaultAzureMonitorLatency": false,
        "useHealthService": false,
        "useInternalHintingApi": false,
        "useLatestQueryRequestSerializationVersion": false,
        "useLowLatencyPipelineDataQualityForAzureMonitor": false,
        "useMetricsStoreMigrationSupport": false,
        "useNewHintingApi": false,
        "useNewMonitorTemplateInterface": false,
        "useNewMonitorTemplateInterfaceForDynamicThreshold": false,
        "useOptimizedMetricFetch": false,
        "useQueryServiceBatching": false,
        "useQueryServiceBatchingForJs": false,
        "useQueryServiceForCrossStampQuery": false,
        "useQueryServiceInMdmDataQualityClient": false,
        "useResolutionForAnomalyTimeWindowLookback": false,
        "zeroAsNoValueSentinel": false
      },
      "monitorDataSourceType": 0,
      "raiseIncientOnMonitorFailure": null,
      "resourceType": "HydrationStorageAccountsHealth",
      "severityForMonitorFailure": 0,
      "shouldMitigateIncident": true,
      "shouldSendToAutomation": false,
      "templateSpecificParameters": {
        "metric": "Count"
      },
      "templateType": 2,
      "tenantName": "",
      "thresholds": [
        {
          "comparator": ">=",
          "healthStatus": 1,
          "severity": 3,
          "value": 20.0
        }
      ],
      "version": 20
    }
  ],
  "pendingMetricsOrderingFix": false,
  "preferQueryMetricsStore": null,
  "replicationState": 0,
  "tenant": "ARM",
  "treatMissingSeriesAsZeros": false,
  "version": 0,
  "views": null
}